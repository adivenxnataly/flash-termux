#!/data/data/com.termux/files/usr/bin/bash

r3="\033[31m"
g3="\033[32m"
y1="\033[33m"
b1="\033[34m"
r5="\033[0m"

slot=""
force=false
while [[ $# -gt 0 ]]; do
    case $1 in
        --slot) slot="$2"; shift 2 ;;
        --force) force=true; shift ;;
        --disable-verity) disable_verity=true; shift ;;
        *) mode="$1"; shift ;;
    esac
done

LOG_FILE="flash.log"
IMGS_DIR="$(pwd)"

log() {
    echo -e "${y1}$(date '+%Y-%m-%d %H:%M:%S')${r5} - $1" | tee -a "$LOG_FILE"
}

confirm() {
    if $force; then return 0; fi
    echo -ne "${y1}>> $1 (y/n)? ${r5}"
    read -r choice
    case "$choice" in
        y|Y) return 0 ;;
        *) log "${r3}Operation cancelled${r5}"; return 1 ;;
    esac
}

check_fastboot() {
    if ! fastboot devices | grep -q "fastboot"; then
        log "${r3}No device in fastboot mode!${r5}"
        log "Connect device in fastboot mode first:"
        log "1. Power off device"
        log "2. Hold Power + Vol Down"
        log "3. Connect USB cable"
        exit 1
    fi
}

check_images() {
    local img_count=$(ls *.img *.bin 2>/dev/null | wc -l)
    if [ "$img_count" -eq 0 ]; then
        log "${r3}ERROR: No .img or .bin files found!${r5}"
        log "Please cd to the directory containing firmware images"
        exit 1
    fi
}

set_slot() {
    [ -z "$slot" ] && return
    log "${g3}Setting active slot to ${slot}...${r5}"
    fastboot set_active "$slot" || {
        log "${r3}Failed to set active slot!${r5}"
        exit 1
    }
    fastboot oem cdms
}

flash_partition() {
    local partition="$1"
    local img="$2"
    local flags=""
    
    [ -n "$slot" ] && [[ "$partition" != "super" ]] && partition="${partition}_${slot}"
    
    [[ "$partition" == vbmeta* ]] && [ "$disable_verity" = true ] && \
        flags="--disable-verity --disable-verification"
    
    log "${b1}Flashing $partition...${r5}"
    fastboot $flags flash "$partition" "$img" || {
        log "${r3}Failed to flash $partition!${r5}"
        return 1
    }
}

wipe_data() {
    log "${r3}Starting data wipe...${r5}"
    partitions=("userdata" "cache" "metadata" "cust")
    
    for partition in "${partitions[@]}"; do
        if confirm " Erase ${partition} partition?"; then
            log "${b1}Erasing ${partition}...${r5}"
            fastboot erase "$partition" || {
                log "${r3}Failed to erase ${partition}!${r5}"
            }
        fi
    done
}

fastbootd() {
    local partitions=("system" "vendor" "product" "system_ext" "mi_ext")
    local needs_fastbootd=false
    
    for p in "${partitions[@]}"; do
        [ -f "$p.img" ] && { needs_fastbootd=true; break; }
    done
    
    if ! $needs_fastbootd; then
        return
    fi
    
    log "${y1}Switching to fastbootd for dynamic partitions..${r5}"
    fastboot reboot fastboot
    sleep 5
    
    for p in "${partitions[@]}"; do
        [ -f "$p.img" ] || continue
        flash_partition "$p" "$p.img"
    done
    
    log "${y1}Returning to bootloader...${r5}"
    fastboot reboot bootloader
    sleep 5
}

check_fastboot
check_images
set_slot

if [ "$mode" == "all" ]; then
    confirm "${r3}WARNING:${r5} This will ERASE ALL USER DATA! Continue?" && \
    wipe_data
elif [ "$mode" == "keep_data" ]; then
    log "Skipping data wipe (keep_data mode)${r5}"
else
    log "${r3}Unknown command!${r5}"
    exit 1
fi

for vbmeta in vbmeta*.img; do
    [ -f "$vbmeta" ] || continue
    partition=$(basename "$vbmeta" .img)
    flash_partition "$partition" "$vbmeta"
done

fastbootd

for img in *.img *.bin; do
    [ -f "$img" ] || continue
    case "$img" in
        vbmeta*|preloader*) continue ;;
        system*|vendor*|product*|system_ext*|mi_ext*) continue ;;
        *)
            partition=$(basename "$img" .img)
            partition=$(basename "$partition" .bin)
            flash_partition "$partition" "$img"
            ;;
    esac
done

if [ -f "preloader"* ]; then
    confirm "${r3}WARNING:${r5} Preloader flashing is dangerous! Continue?" && \
    flash_partition "preloader" "preloader"*
fi

log "${g3}SUCCESS: Flashing completed!${r5}"
log "Rebooting to recovery..."
fastboot reboot recovery
